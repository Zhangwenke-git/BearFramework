<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="2" hostname="Zhangwenke" name="pytest" skipped="0" tests="2" time="0.204" timestamp="2021-10-27T22:45:54.835481"><testcase classname="testsuite.test_KMS.TestCase_KMS" file="testsuite\test_KMS.py" line="16" name="test_kms_user_login[param0-\u7528\u6237\u540d\u6b63\u786e\u5bc6\u7801\u9519\u8bef-expect0]" tester="zhangwenke" time="0.022"><properties><property name="outcome" value="111"/><property name="log" value="&lt;_pytest.logging.LogCaptureFixture object at 0x0000028C6D4318D0&gt;"/></properties><failure message="AssertionError: assert 403 == {&apos;code&apos;: 200, &apos;message&apos;: &apos; 密码错误&apos;, &apos;result&apos;: False}
 +  where 403 = &lt;Response [403]&gt;.status_code">self = &lt;testsuite.test_KMS.TestCase_KMS object at 0x0000028C6D4215C0&gt;
param = {&apos;password&apos;: &apos;dsaddddddddd&apos;, &apos;username&apos;: &apos;admin&apos;}, desc = &apos;用户名正确密码错误&apos;
expect = {&apos;code&apos;: 200, &apos;message&apos;: &apos; 密码错误&apos;, &apos;result&apos;: False}
json_template = &lt;function json_template.&lt;locals&gt;.read_template_by_test_name at 0x0000028C6D425E18&gt;

    @pytest.mark.parametrize(&quot;param,desc,expect&quot;, [[{&apos;password&apos;: &apos;dsaddddddddd&apos;, &apos;username&apos;: &apos;admin&apos;}, &apos;用户名正确密码错误&apos;, {&apos;code&apos;: 200, &apos;result&apos;: False, &apos;message&apos;: &apos; 密码错误&apos;}], [{&apos;password&apos;: &apos; sdad@1332&apos;, &apos;username&apos;: &apos;admin&apos;}, &apos;用户名和密码均正确&apos;, {&apos;code&apos;: 200}]])
    @allure.story(&quot;Case:KMS用户登录&quot;)
    @allure.severity(&quot;critical&quot;)
    def test_kms_user_login(self,param,desc,expect,json_template):
        &quot;&quot;&quot;KMS用户登录接口，涵盖用户名和用户密码&quot;&quot;&quot;
        with allure.step(&quot;step:生成测试数据&quot;):
            case = json_template(**param)
            allure.attach(json.dumps(case,indent=4,ensure_ascii=False),&quot;配置信息&quot;,allure.attachment_type.JSON)
        with allure.step(&quot;step:函数调用&quot;):
            data_ = case.get(&apos;data&apos;)
            data = format_object.format_(data_)
            allure.attach(json.dumps(data,indent=4,ensure_ascii=False),&quot;请求入参&quot;,allure.attachment_type.JSON)
        with allure.step(f&quot;step:请求url: {case.get(&apos;url&apos;)}&quot;):
            if case.get(&apos;method&apos;).lower()==&apos;post&apos;:
                res = requests.post(url=case.get(&apos;url&apos;),headers=case.get(&apos;headers&apos;), data=data)
            else:
                res = requests.get(url=case.get(&apos;url&apos;),headers=case.get(&apos;headers&apos;), params=data)
        with allure.step(&quot;step:请求断言&quot;):
&gt;           assert res.status_code == expect
E           AssertionError: assert 403 == {&apos;code&apos;: 200, &apos;message&apos;: &apos; 密码错误&apos;, &apos;result&apos;: False}
E            +  where 403 = &lt;Response [403]&gt;.status_code

test_KMS.py:35: AssertionError</failure><system-err>[2021-10-27 22:45:54] [INFO] Initiate environment config file successfully!
testsuite\test_KMS.py:17: PytestExperimentalApiWarning: record_xml_attribute is an experimental feature
  @pytest.mark.parametrize(&quot;param,desc,expect&quot;, [[{&apos;password&apos;: &apos;dsaddddddddd&apos;, &apos;username&apos;: &apos;admin&apos;}, &apos;用户名正确密码错误&apos;, {&apos;code&apos;: 200, &apos;result&apos;: False, &apos;message&apos;: &apos; 密码错误&apos;}], [{&apos;password&apos;: &apos; sdad@1332&apos;, &apos;username&apos;: &apos;admin&apos;}, &apos;用户名和密码均正确&apos;, {&apos;code&apos;: 200}]])
[2021-10-27 22:45:54] [DEBUG] The formatted data is :[{&apos;check&apos;: 1, &apos;password&apos;: &apos;dsaddddddddd&apos;, &apos;username&apos;: &apos;admin&apos;}]
</system-err></testcase><testcase classname="testsuite.test_KMS.TestCase_KMS" file="testsuite\test_KMS.py" line="16" name="test_kms_user_login[param1-\u7528\u6237\u540d\u548c\u5bc6\u7801\u5747\u6b63\u786e-expect1]" tester="zhangwenke" time="0.007"><properties><property name="outcome" value="111"/><property name="log" value="&lt;_pytest.logging.LogCaptureFixture object at 0x0000028C6D431D30&gt;"/></properties><failure message="AssertionError: assert 403 == {&apos;code&apos;: 200}
 +  where 403 = &lt;Response [403]&gt;.status_code">self = &lt;testsuite.test_KMS.TestCase_KMS object at 0x0000028C6C206D68&gt;
param = {&apos;password&apos;: &apos; sdad@1332&apos;, &apos;username&apos;: &apos;admin&apos;}, desc = &apos;用户名和密码均正确&apos;
expect = {&apos;code&apos;: 200}
json_template = &lt;function json_template.&lt;locals&gt;.read_template_by_test_name at 0x0000028C6D4A8D90&gt;

    @pytest.mark.parametrize(&quot;param,desc,expect&quot;, [[{&apos;password&apos;: &apos;dsaddddddddd&apos;, &apos;username&apos;: &apos;admin&apos;}, &apos;用户名正确密码错误&apos;, {&apos;code&apos;: 200, &apos;result&apos;: False, &apos;message&apos;: &apos; 密码错误&apos;}], [{&apos;password&apos;: &apos; sdad@1332&apos;, &apos;username&apos;: &apos;admin&apos;}, &apos;用户名和密码均正确&apos;, {&apos;code&apos;: 200}]])
    @allure.story(&quot;Case:KMS用户登录&quot;)
    @allure.severity(&quot;critical&quot;)
    def test_kms_user_login(self,param,desc,expect,json_template):
        &quot;&quot;&quot;KMS用户登录接口，涵盖用户名和用户密码&quot;&quot;&quot;
        with allure.step(&quot;step:生成测试数据&quot;):
            case = json_template(**param)
            allure.attach(json.dumps(case,indent=4,ensure_ascii=False),&quot;配置信息&quot;,allure.attachment_type.JSON)
        with allure.step(&quot;step:函数调用&quot;):
            data_ = case.get(&apos;data&apos;)
            data = format_object.format_(data_)
            allure.attach(json.dumps(data,indent=4,ensure_ascii=False),&quot;请求入参&quot;,allure.attachment_type.JSON)
        with allure.step(f&quot;step:请求url: {case.get(&apos;url&apos;)}&quot;):
            if case.get(&apos;method&apos;).lower()==&apos;post&apos;:
                res = requests.post(url=case.get(&apos;url&apos;),headers=case.get(&apos;headers&apos;), data=data)
            else:
                res = requests.get(url=case.get(&apos;url&apos;),headers=case.get(&apos;headers&apos;), params=data)
        with allure.step(&quot;step:请求断言&quot;):
&gt;           assert res.status_code == expect
E           AssertionError: assert 403 == {&apos;code&apos;: 200}
E            +  where 403 = &lt;Response [403]&gt;.status_code

test_KMS.py:35: AssertionError</failure><system-err>testsuite\test_KMS.py:17: PytestExperimentalApiWarning: record_xml_attribute is an experimental feature
  @pytest.mark.parametrize(&quot;param,desc,expect&quot;, [[{&apos;password&apos;: &apos;dsaddddddddd&apos;, &apos;username&apos;: &apos;admin&apos;}, &apos;用户名正确密码错误&apos;, {&apos;code&apos;: 200, &apos;result&apos;: False, &apos;message&apos;: &apos; 密码错误&apos;}], [{&apos;password&apos;: &apos; sdad@1332&apos;, &apos;username&apos;: &apos;admin&apos;}, &apos;用户名和密码均正确&apos;, {&apos;code&apos;: 200}]])
[2021-10-27 22:45:55] [DEBUG] The formatted data is :[{&apos;check&apos;: 1, &apos;password&apos;: &apos; sdad@1332&apos;, &apos;username&apos;: &apos;admin&apos;}]
</system-err></testcase></testsuite></testsuites>