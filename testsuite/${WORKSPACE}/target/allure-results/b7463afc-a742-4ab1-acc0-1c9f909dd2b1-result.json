{"name": "test_uums_login[param0-账号不存在密码正确-expect0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 403 == {'code': 10032, 'message': '用户不存在', 'result': ' false'}\n +  where 403 = <Response [403]>.status_code", "trace": "self = <testsuite.test_UUMS.TestCase_UUMS object at 0x000002A777310280>\nparam = {'name': 'ribn', 'passcode': 'aaaa1111!'}, desc = '账号不存在密码正确'\nexpect = {'code': 10032, 'message': '用户不存在', 'result': ' false'}\njson_template = <function json_template.<locals>.read_template_by_test_name at 0x000002A77712F310>\n\n    @pytest.mark.parametrize(\"param,desc,expect\", [[{'name': 'ribn', 'passcode': 'aaaa1111!'}, '账号不存在密码正确', {'code': 10032, 'result': ' false', 'message': '用户不存在'}], [{'name': '猪宝宝', 'passcode': 'aaaa1111!'}, '登录账号和密码正确', {'code': 200, 'result': ' sussess'}]])\n    @allure.story(\"Case:uums用户中心登录\")\n    @allure.severity(\"critical\")\n    def test_uums_login(self,param,desc,expect,json_template):\n        \"\"\"uums用户中心登录\"\"\"\n        with allure.step(\"step:生成测试数据\"):\n            case = json_template(**param)\n            allure.attach(json.dumps(case,indent=4,ensure_ascii=False),\"配置信息\",allure.attachment_type.JSON)\n        with allure.step(\"step:函数调用\"):\n            data_ = case.get('data')\n            data = format_object.format_(data_)\n            allure.attach(json.dumps(data,indent=4,ensure_ascii=False),\"请求入参\",allure.attachment_type.JSON)\n        with allure.step(f\"step:请求url: {case.get('url')}\"):\n            if case.get('method').lower()=='post':\n                res = requests.post(url=case.get('url'),headers=case.get('headers'), data=data)\n            else:\n                res = requests.get(url=case.get('url'),headers=case.get('headers'), params=data)\n        with allure.step(\"step:请求断言\"):\n>           assert res.status_code == expect\nE           AssertionError: assert 403 == {'code': 10032, 'message': '用户不存在', 'result': ' false'}\nE            +  where 403 = <Response [403]>.status_code\n\ntest_UUMS.py:33: AssertionError"}, "description": "uums用户中心登录", "steps": [{"name": "step:生成测试数据", "status": "passed", "attachments": [{"name": "配置信息", "source": "f95b0cac-93c4-4122-bfab-30b1a7fbff29-attachment.json", "type": "application/json"}], "start": 1628837466769, "stop": 1628837466771}, {"name": "step:函数调用", "status": "passed", "attachments": [{"name": "请求入参", "source": "1dd9d50f-e93b-4c65-bbb2-eb30ffaf146e-attachment.json", "type": "application/json"}], "start": 1628837466771, "stop": 1628837466772}, {"name": "step:请求url: https://www.sojson.com/", "status": "passed", "start": 1628837466772, "stop": 1628837466917}, {"name": "step:请求断言", "status": "failed", "statusDetails": {"message": "AssertionError: assert 403 == {'code': 10032, 'message': '用户不存在', 'result': ' false'}\n +  where 403 = <Response [403]>.status_code\n", "trace": "  File \"C:\\Users\\lenovo\\Desktop\\BearFramework\\testsuite\\test_UUMS.py\", line 33, in test_uums_login\n    assert res.status_code == expect\n"}, "start": 1628837466917, "stop": 1628837466918}], "attachments": [{"name": "log", "source": "fae867a2-9fc6-4599-8c53-c14ccaaaec89-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "param", "value": "{'name': 'ribn', 'passcode': 'aaaa1111!'}"}, {"name": "desc", "value": "'账号不存在密码正确'"}, {"name": "expect", "value": "{'code': 10032, 'result': ' false', 'message': '用户不存在'}"}], "start": 1628837466769, "stop": 1628837466918, "uuid": "2271b95c-f060-48ba-afc4-6ca0161434a5", "historyId": "7eb4bb809f4d5f8266daf5cf3945a539", "testCaseId": "2ceb2604a37e4065f7b39b2a6d1c0517", "fullName": "testsuite.test_UUMS.TestCase_UUMS#test_uums_login", "labels": [{"name": "story", "value": "Case:uums用户中心登录"}, {"name": "feature", "value": "Title:UUMS用户认证系统"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "APItest"}, {"name": "parentSuite", "value": "testsuite"}, {"name": "suite", "value": "test_UUMS"}, {"name": "subSuite", "value": "TestCase_UUMS"}, {"name": "host", "value": "DESKTOP-S2LA16V"}, {"name": "thread", "value": "8144-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testsuite.test_UUMS"}]}