{"name": "test_order_submit[param0-限价订单提交-T+1-expect0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 415 == {'code': 200, 'result': ' sussess'}\n +  where 415 = <Response [415]>.status_code", "trace": "self = <testsuite.test_ODM.TestCase_ODM object at 0x000001B9BAB93C70>\nparam = {'instnCd': '100035', 'netPrc': '100.2344', 'password': 'aaaa1111!', 'username': 'zhangwneke', ...}\ndesc = '限价订单提交-T+1', expect = {'code': 200, 'result': ' sussess'}\njson_template = <function json_template.<locals>.read_template_by_test_name at 0x000001B9BA7C5790>\n\n    @pytest.mark.parametrize(\"param,desc,expect\", [[{'netPrc': '100.2344', 'password': 'aaaa1111!', 'instnCd': '100035', 'volumn': '1000,000', 'username': 'zhangwneke'}, '限价订单提交-T+1', {'code': 200, 'result': ' sussess'}]])\n    @allure.story(\"Case:限价订单提交\")\n    @allure.severity(\"critical\")\n    def test_order_submit(self,param,desc,expect,json_template):\n        \"\"\"None\"\"\"\n        with allure.step(\"step:生成测试数据\"):\n            case = json_template(**param)\n            allure.attach(json.dumps(case,indent=4,ensure_ascii=False),\"配置信息\",allure.attachment_type.JSON)\n        with allure.step(\"step:函数调用\"):\n            data_ = case.get('data')\n            data = format_object.format_(data_)\n            allure.attach(json.dumps(data,indent=4,ensure_ascii=False),\"请求入参\",allure.attachment_type.JSON)\n        with allure.step(f\"step:请求url: {case.get('url')}\"):\n            if case.get('method').lower()=='post':\n                res = requests.post(url=case.get('url'),headers=case.get('headers'), data=data)\n            else:\n                res = requests.get(url=case.get('url'),headers=case.get('headers'), params=data)\n        with allure.step(\"step:请求断言\"):\n>           assert res.status_code == expect\nE           AssertionError: assert 415 == {'code': 200, 'result': ' sussess'}\nE            +  where 415 = <Response [415]>.status_code\n\ntest_ODM.py:35: AssertionError"}, "description": "None", "steps": [{"name": "step:生成测试数据", "status": "passed", "attachments": [{"name": "配置信息", "source": "f4b148f5-e002-4c24-b9c2-822a97c7a50f-attachment.json", "type": "application/json"}], "start": 1628821463697, "stop": 1628821463700}, {"name": "step:函数调用", "status": "passed", "attachments": [{"name": "请求入参", "source": "ff415385-863c-49f1-a2da-f0292c25f968-attachment.json", "type": "application/json"}], "start": 1628821463700, "stop": 1628821463701}, {"name": "step:请求url: https://www.cnblogs.com/aaronthon/ajax/GetPostStat", "status": "passed", "start": 1628821463701, "stop": 1628821463790}, {"name": "step:请求断言", "status": "failed", "statusDetails": {"message": "AssertionError: assert 415 == {'code': 200, 'result': ' sussess'}\n +  where 415 = <Response [415]>.status_code\n", "trace": "  File \"C:\\Users\\lenovo\\Desktop\\BearFramework\\testsuite\\test_ODM.py\", line 35, in test_order_submit\n    assert res.status_code == expect\n"}, "start": 1628821463790, "stop": 1628821463790}], "attachments": [{"name": "log", "source": "5e861ab4-72be-4be5-bce8-08f0a67f02d1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "param", "value": "{'netPrc': '100.2344', 'password': 'aaaa1111!', 'instnCd': '100035', 'volumn': '1000,000', 'username': 'zhangwneke'}"}, {"name": "desc", "value": "'限价订单提交-T+1'"}, {"name": "expect", "value": "{'code': 200, 'result': ' sussess'}"}], "start": 1628821463697, "stop": 1628821463791, "uuid": "f412aab9-614d-49ce-850c-d9b56beadad3", "historyId": "081c1632d8ca28faeb8963ee4a7cccaa", "testCaseId": "13ea4aa24e4f6dbbd77c6772dcc058c5", "fullName": "testsuite.test_ODM.TestCase_ODM#test_order_submit", "labels": [{"name": "feature", "value": "Title:ODM交易系统"}, {"name": "severity", "value": "critical"}, {"name": "story", "value": "Case:限价订单提交"}, {"name": "tag", "value": "APItest"}, {"name": "parentSuite", "value": "testsuite"}, {"name": "suite", "value": "test_ODM"}, {"name": "subSuite", "value": "TestCase_ODM"}, {"name": "host", "value": "DESKTOP-S2LA16V"}, {"name": "thread", "value": "6460-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testsuite.test_ODM"}]}